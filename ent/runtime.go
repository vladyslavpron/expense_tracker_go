// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
	"tracker/ent/balance"
	"tracker/ent/schema"
	"tracker/ent/transaction"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	balanceFields := schema.Balance{}.Fields()
	_ = balanceFields
	// balanceDescTitle is the schema descriptor for title field.
	balanceDescTitle := balanceFields[0].Descriptor()
	// balance.DefaultTitle holds the default value on creation for the title field.
	balance.DefaultTitle = balanceDescTitle.Default.(string)
	// balanceDescUsdToCurrency is the schema descriptor for usd_to_currency field.
	balanceDescUsdToCurrency := balanceFields[2].Descriptor()
	// balance.DefaultUsdToCurrency holds the default value on creation for the usd_to_currency field.
	balance.DefaultUsdToCurrency = balanceDescUsdToCurrency.Default.(float64)
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescDescription is the schema descriptor for description field.
	transactionDescDescription := transactionFields[0].Descriptor()
	// transaction.DefaultDescription holds the default value on creation for the description field.
	transaction.DefaultDescription = transactionDescDescription.Default.(string)
	// transactionDescCreatedAt is the schema descriptor for created_at field.
	transactionDescCreatedAt := transactionFields[2].Descriptor()
	// transaction.DefaultCreatedAt holds the default value on creation for the created_at field.
	transaction.DefaultCreatedAt = transactionDescCreatedAt.Default.(func() time.Time)
}
